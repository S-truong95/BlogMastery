// <auto-generated />
using System;
using BlogMastery.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlogMastery.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20191017210240_EditData")]
    partial class EditData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlogMastery.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new { Id = 1, Name = "Sci-fi" },
                        new { Id = 2, Name = "Romance" },
                        new { Id = 3, Name = "Action" },
                        new { Id = 4, Name = "Fantasy" },
                        new { Id = 5, Name = "Horror" },
                        new { Id = 6, Name = "Drama" },
                        new { Id = 7, Name = "Comedy" }
                    );
                });

            modelBuilder.Entity("BlogMastery.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body");

                    b.Property<DateTime>("DateTime");

                    b.Property<int>("GenreId");

                    b.Property<string>("Reviewer");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Posts");

                    b.HasData(
                        new { Id = 1, Body = "A sorcerer lost his parents and is taken in by his horrible aunt. The scorcerer's name is Harry Potter and he starts his new life with many adventures as he attends Hogwarts School of Witchcraft and Wizardry, learns how to perform magic and comes face to face with his archenemy, Lord Voldemort.", DateTime = new DateTime(2019, 10, 17, 17, 2, 40, 85, DateTimeKind.Local), GenreId = 4, Reviewer = "Jk Rowling", Title = "Harry Potter" },
                        new { Id = 2, Body = "When Thor's evil brother, Loki, gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury, director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's 'dream team' are Iron Man, Captain America, the Hulk, Thor, the Black Widow and Hawkeye.", DateTime = new DateTime(2019, 10, 17, 17, 2, 40, 87, DateTimeKind.Local), GenreId = 1, Reviewer = "Stan Lee", Title = "Avengers" }
                    );
                });

            modelBuilder.Entity("BlogMastery.Models.PostTag", b =>
                {
                    b.Property<int>("PostId");

                    b.Property<int>("TagId");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTag");

                    b.HasData(
                        new { PostId = 1, TagId = 1 },
                        new { PostId = 1, TagId = 2 },
                        new { PostId = 1, TagId = 3 },
                        new { PostId = 1, TagId = 4 },
                        new { PostId = 1, TagId = 5 },
                        new { PostId = 1, TagId = 6 },
                        new { PostId = 1, TagId = 7 },
                        new { PostId = 2, TagId = 1 },
                        new { PostId = 2, TagId = 2 },
                        new { PostId = 2, TagId = 3 },
                        new { PostId = 2, TagId = 4 },
                        new { PostId = 2, TagId = 5 },
                        new { PostId = 2, TagId = 6 },
                        new { PostId = 2, TagId = 7 }
                    );
                });

            modelBuilder.Entity("BlogMastery.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new { Id = 1, Name = "Sci-fi" },
                        new { Id = 2, Name = "Romance" },
                        new { Id = 3, Name = "Action" },
                        new { Id = 4, Name = "Fantasy" },
                        new { Id = 5, Name = "Horror" },
                        new { Id = 6, Name = "Drama" },
                        new { Id = 7, Name = "Comedy" }
                    );
                });

            modelBuilder.Entity("BlogMastery.Models.Post", b =>
                {
                    b.HasOne("BlogMastery.Models.Genre", "Genre")
                        .WithMany("Posts")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BlogMastery.Models.PostTag", b =>
                {
                    b.HasOne("BlogMastery.Models.Post", "Posts")
                        .WithMany("PostTag")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlogMastery.Models.Tag", "Tags")
                        .WithMany("PostTag")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
